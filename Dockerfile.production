# Production Dockerfile for HEO Plugin
FROM node:18-alpine AS base

# Install system dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    curl \
    git \
    rust \
    cargo

# Install Circom
RUN curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"
RUN cargo install --git https://github.com/iden3/circom.git

# Install snarkjs globally
RUN npm install -g snarkjs

# Install Solana CLI and Anchor
RUN sh -c "$(curl -sSfL https://release.solana.com/v1.16.0/install)"
ENV PATH="/root/.local/share/solana/install/active_release/bin:$PATH"
RUN cargo install --git https://github.com/coral-xyz/anchor anchor-cli --locked

# Stage 1: Dependencies
FROM base AS deps
WORKDIR /app
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# Stage 2: Builder
FROM base AS builder
WORKDIR /app
COPY package*.json ./
RUN npm ci
COPY . .

# Compile circuits
RUN npm run compile:circuit

# Build Solana programs
RUN anchor build

# Build Next.js app
RUN npm run build

# Stage 3: Production runner
FROM node:18-alpine AS runner
WORKDIR /app

# Install runtime dependencies
RUN apk add --no-cache curl

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy built application
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static
COPY --from=builder /app/circuits/protocol_check_js ./circuits/protocol_check_js
COPY --from=builder /app/target ./target

USER nextjs

EXPOSE 3000
ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

CMD ["node", "server.js"] 